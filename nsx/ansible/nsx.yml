---
- hosts: localhost
  gather_facts: no
  collections:
    - vmware.ansible_for_nsxt

# ansible-galaxy collection install git+https://github.com/vmware/ansible-for-nsxt.git,master

  tasks:

    - name: Install NSX-T License
      nsxt_licenses:
        hostname: "{{ vcenter.dvs.portgroup.management.nsx_ip }}"
        username: "admin"
        password: "{{ lookup('env', 'TF_VAR_nsx_password') }}"
        validate_certs: no
        license_key: "{{ lookup('env', 'TF_VAR_nsx_license') }}"
        state: present
      ignore_errors: yes  # If license in already in use or not applicable, it will result in 'failure', so need to ensure we continue by ignoring the error
      no_log: true

    - name: Register NSX-T Compute Manager
      nsxt_fabric_compute_managers:
        hostname: "{{ vcenter.dvs.portgroup.management.nsx_ip }}"
        username: "admin"
        password: "{{ lookup('env', 'TF_VAR_nsx_password') }}"
        validate_certs: False
        display_name: "{{ vcenter.name }}.{{ dns.domain }}"
        server: "{{ vcenter.name }}.{{ dns.domain }}"
        origin_type: vCenter
        credential:
          credential_type: UsernamePasswordLoginCredential
          username: "administrator@{{ vcenter.sso.domain_name }}"
          password: "{{ lookup('env', 'TF_VAR_vcenter_password') }}"
        state: present

    - name: Configure virtual IP
      nsxt_virtual_ip:
        hostname: "{{ vcenter.dvs.portgroup.management.nsx_ip }}"
        username: "admin"
        password: "{{ lookup('env', 'TF_VAR_nsx_password') }}"
        validate_certs: False
        virtual_ip_address: "{{ vcenter.dvs.portgroup.management.nsx_vip }}"
        state: present

    - name: Configure IP Pool # was relying on manager API
      nsxt_virtual_ip:
        hostname: "{{ vcenter.dvs.portgroup.management.nsx_ip }}"
        username: "admin"
        password: "{{ lookup('env', 'TF_VAR_nsx_password') }}"
        display_name:
        validate_certs: False
        virtual_ip_address: "{{ vcenter.dvs.portgroup.management.nsx_vip }}"
        state: present

    - name: Create ip pool # was relying on manager API
      nsxt_ip_pools:
        hostname: "{{ vcenter.dvs.portgroup.management.nsx_ip }}"
        username: "admin"
        password: "{{ lookup('env', 'TF_VAR_nsx_password') }}"
        validate_certs: False
        display_name: "{{ item.name }}"
        subnets:
          - allocation_ranges:
              - start: "{{ item.start }}"
                end: "{{ item.end }}"
            cidr: "{{ item.cidr }}"
        state: "present"
      loop: "{{ nsx.ip_pools}}"

#    - name: Create a Hostswitch Profile # was relying on manager API
#      nsxt_uplink_profiles:
#        hostname: "{{ vcenter.dvs.portgroup.management.nsx_ip }}"
#        username: "admin"
#        password: "{{ lookup('env', 'TF_VAR_nsx_password') }}"
#        validate_certs: False
#        display_name: "{{ item.name }}"
#        mtu: "{{ item.mtu }}"
#        resource_type: "UplinkHostSwitchProfile"
#        teaming:
#          active_list:
#            - uplink_name: "uplink-1"
#              uplink_type: PNIC
#          policy: FAILOVER_ORDER
#        transport_vlan: 0,
#        state: "present",
